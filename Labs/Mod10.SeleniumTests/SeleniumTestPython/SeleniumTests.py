# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service 
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.common.exceptions import TimeoutException
# from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestJavafind():
  def setup_method(self, method):
    geckodriver_path = r'C:\Learning\School Assignments\PSU\Mod10.SeleniumTests\SeleniumTestPython\geckodriver.exe'
    firefox_binary_location = r'C:\Program Files\Mozilla Firefox\firefox.exe'
    profile_path = r'C:\Users\pj_pa\AppData\Roaming\Mozilla\Firefox\Profiles\q3srkhh9.default-release'
    service = Service(executable_path=geckodriver_path)  
    options = Options()
    options.profile = profile_path
    options.set_preference("browser.shell.checkDefaultBrowser", False)
    options.set_preference("network.cookie.cookieBehavior", 2) 
    options.set_preference("dom.disable_beforeunload", True)
    options.binary_location = firefox_binary_location
    self.driver = webdriver.Firefox(service=service, options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_javafind(self):

    self.driver.get("https://docs.oracle.com/javase/9/docs/api/overview-summary.html")
    
    wait = WebDriverWait(self.driver, 15)


    search_input = wait.until(EC.element_to_be_clickable((By.ID, "search")))
    self.driver.execute_script("arguments[0].click();", search_input)
    
    search_input.send_keys("java.lang.String")
 
    element = WebDriverWait(self.driver, 10).until(
    EC.element_to_be_clickable((By.LINK_TEXT, "java.lang.String")))
    element.click()

    # self.driver.find_element(By.CSS_SELECTOR, ".rowColor:nth-child(3) > .colConstructorName a").click()
    css_element = WebDriverWait(self.driver, 10).until(
    EC.element_to_be_clickable((By.CSS_SELECTOR, ".rowColor:nth-child(3) > .colConstructorName a")))
    css_element.click()

    self.driver.find_element(By.ID, "search").click()
    self.driver.find_element(By.ID, "search").send_keys("javax.swing.jframe")
 
    element = WebDriverWait(self.driver, 10).until(
    EC.element_to_be_clickable((By.LINK_TEXT, "javax.swing.JFrame")))
    element.click()

    #self.driver.find_element(By.CSS_SELECTOR, ".altColor:nth-child(4) > .colConstructorName .memberNameLink > a").click()

    css_element = WebDriverWait(self.driver, 10).until(
    EC.element_to_be_clickable((By.CSS_SELECTOR, ".altColor:nth-child(4) > .colConstructorName .memberNameLink > a")))
    css_element.click()
  
